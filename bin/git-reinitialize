#!/bin/bash

set -eu
set -o pipefail

if [ "${1:-}" = "-h" ] || [  "${1:-}" = "-h" ]; then
    echo
    echo "Reinitialize .git directory with remotes and branches from a .gitremote file"
    echo
    echo "Line format in .gitremote file:"
    echo "    remote-name remote-url [branch]"
    echo
    echo "Pass the values directly as arguments to skip the .gitremote file:"
    echo "    git-reinitialize [remote] [url] [branch]"
    echo
    exit 0
fi


add_remote() {
    local remote="$1"
    local url="$2"
    local branch="${3:-}"

    # if git has remote
    if git remote | grep -q "^$remote$"; then
        >&2 echo "git remote $remote already exists"
    else
        >&2 echo "Adding remote $remote"
        git remote add "$remote" "$url"
        git fetch "$remote"

        if [ "$branch" = "" ]; then
            branch="$(git remote show $remote | sed -n '/HEAD branch/s/.*: //p')"
        fi

        if [ "$(git branch --show-current)" != "$branch" ]; then
            git switch -c "$branch"
        fi

        git reset "$remote/$branch"
        git branch --set-upstream-to $remote/$branch
    fi

}



if [ ! -d .git ]; then
    git init
fi

initial_branch="$(git branch --show-current)"

if [ "${1:-}" != "" ]; then
    add_remote $1 $2 ${3:-}
    git switch "$initial_branch"
    exit 0
fi

if [ ! -f .gitremote ]; then
    >&2 echo "No .gitremote file found"
    exit 1
fi


cat .gitremote | while read line 
do
    add_remote $line
done

git switch "$initial_branch"
