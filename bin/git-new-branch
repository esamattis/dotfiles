#!/bin/sh

set -eu

if [ "${1-}" = "-h" ] || [ "${1-}" = "--help" ]; then
    >&2 echo "git subcommand to create a new branch with a unique name"
    >&2 echo "usage: git random-branch -b <base>"
    exit 0
fi


base_branch=

if [ "${1-}" = "-b" ] ; then
    shift
    if [ $# -eq 0 ]; then
        >&2 echo "missing base branch after -b"
        exit 1
    fi
    base_branch="$1"
    shift
else
    echo "Select base branch:"
    echo "  m) origin/main"
    echo "  c) current HEAD (default)"
    printf "> "
    read choice
    case "${choice}" in
        m|M)

            base_branch="origin/main"
            ;;
        c|C|"")
            # current HEAD; leave base_branch empty
            ;;
        *)
            >&2 echo "invalid choice: ${choice}"
            exit 1
            ;;
    esac
fi

if [ ! -z "$(git status --porcelain)" ] && [ "${base_branch-}" != "" ]; then
    >&2 echo "Working tree is dirty"
    exit 1
fi

slug=""
read -p 'slug> ' slug

if [ "$slug" != "" ]; then
    slug="$(echo "$slug" | tr ' ' '-' | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-')"
elif [ "$base_branch" = "origin/main" ]; then
    slug="main"
else
    slug="$(git rev-parse --abbrev-ref HEAD | tr ' ' '-' | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-')"
fi

username="$(git config github.user || whoami)"
branch="$username-$slug-$(date +"%Y-%m-%d-%H-%M-%S")"

set -x
git switch -c "$branch"
set +x

if [ "$base_branch" != "" ]; then
    set -x
    git reset --hard "$base_branch"
    set +x
fi

echo "$(date +"%Y-%m-%d %H:%M") $branch" >> "$(git rev-parse --show-toplevel)/.git/random-branch-history.log"
