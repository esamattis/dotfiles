#!/bin/bash

set -eu

>&2 echo "Commiting as $(git config github.user)"

if ! ssh-add -l >/dev/null; then
    >&2 echo "No ssh identities. Continue? [y/n] "

    read -n1 cont
    if [ "$cont" != "y" ]; then
        exit 0
    fi
fi

message=

if [ "${1:-}" = "-m" ]; then
    message="$2"
    # Remove the -m and message from the arguments
    shift
    shift
fi

if [ "${1:-}" = "" ]; then
    path="."
    cd "$(git rev-parse --show-toplevel)"
else
    path="$1"
fi

# Add untracked files
git ls-files --others --exclude-standard "$path" | xargs git add --intent-to-add

# Interactive lines from modified and untracked files
git add -p "$path"

if [ "$(git diff --cached)" = "" ]; then
    git reset HEAD "$path"
    echo "Nothing to commit"
    exit 1
fi

# Use the provided commit message and exit early
if [ "${message:-}" != "" ]; then
    git commit -m "$message"
    exit
fi

while true; do
    >&2 echo
    >&2 echo "Staged some changes. Now what?"
    >&2 echo
    >&2 echo "c = commit"
    >&2 echo "d = show diff"
    >&2 echo "s = leave staged"
    >&2 echo "q = quit"
    read -n1 option
    >&2 echo


    if [ "$option" = "c" ] || [ "$option" = "" ] ; then
        while true; do
            >&2 echo
            >&2 echo 'e = edit with $EDITOR'
            >&2 echo "q = quit"
            read -p "Enter commit message> " commit_message
            if [ "$commit_message" = "" ]; then
                continue
            elif [ "$commit_message" = "q" ]; then
                break
            elif [ "$commit_message" = "e" ]; then
                # Use the EDITOR to edit the commit message if empty
                git commit
                break
            else
                git commit -m "$commit_message"

                echo "Amend commit? [y/n]"
                read -n1 amend
                if [ "$amend" = "y" ]; then
                    git commit --amend
                fi

                break
            fi
        done
    elif [ "$option" = "d" ]; then
        git diff --cached
        continue
    elif [ "$option" = "q" ]; then
        break
    elif [ "$option" = "s" ]; then
        exit 0
    else
        continue
    fi

    break
done

# Clean any --intent-to-add files
git reset HEAD "$path"
